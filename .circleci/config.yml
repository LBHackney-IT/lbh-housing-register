version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.0.0
  aws_assume_role: lbh-hackit/aws_assume_role@0.1.0
  cypress: cypress-io/cypress@3.3.1
  sonarcloud: sonarsource/sonarcloud@2.0.0

executors:
  node-executor:
    docker:
      - image: cimg/node:20.17-browsers
  docker-python:
    docker:
      - image: circleci/python:3.7
  cypress-e2e-executor:
    docker:
      - image: cimg/node:20.17-browsers

references:
  workspace_root: &workspace_root '~'
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Commands ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Jobs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
jobs:
  install-dependencies:
    executor: node-executor
    steps:
      - *attach_workspace
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
            - ./.next/cache
            - ./.cache/Cypress
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .

  run-tests:
    executor: node-executor
    steps:
      - cypress/install:
          package-manager: npm
          install-command: npm install
      - cypress/run-tests:
          cypress-command: npx cypress run --component --reporter cypress-circleci-reporter
      - run:
          name: Run Jest Tests
          command: npm run test:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: test_results
            JEST_JUNIT_ADD_FILE_ATTRIBUTE: 'true'
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: coverage
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .

  sonar-scan:
    executor: node-executor
    steps:
      - *attach_workspace
      - sonarcloud/scan

  run-cypress-e2e:
    executor: cypress-e2e-executor
    parameters:
      browser:
        type: string
        default: chrome
      height:
        type: integer
        default: 768
      width:
        type: integer
        default: 1366
    steps:
      - cypress/install:
          package-manager: npm
          install-browsers: true
          install-command: npm install
          post-install: npm run build
      - cypress/run-tests:
          cypress-command: npx cypress run --browser=<< parameters.browser >> --config viewportHeight=<< parameters.height >>,viewportWidth=<< parameters.width >>
      - store_test_results:
          path: test_results

  build-deploy-development:
    executor: aws-cli/default
    steps:
      - *attach_workspace
      - run:
          name: deploy
          command: npm run build && sudo npm i -g serverless@^3 && sls deploy --stage development

  build-deploy-staging:
    executor: aws-cli/default
    steps:
      - *attach_workspace
      - run:
          name: deploy
          command: npm run build && sudo npm i -g serverless@^3 && sls deploy --stage staging

  build-deploy-production:
    executor: aws-cli/default
    steps:
      - *attach_workspace
      - run:
          name: deploy
          command: npm run build && sudo npm i -g serverless@^3 && sls deploy --stage production

  assume-role-development:
    executor: docker-python
    steps:
      - checkout
      - aws_assume_role/assume_role:
          account: $AWS_ACCOUNT_DEVELOPMENT
          profile_name: default
          role: 'LBH_Circle_CI_Deployment_Role'
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .aws

  assume-role-staging:
    executor: docker-python
    steps:
      - checkout
      - aws_assume_role/assume_role:
          account: $AWS_ACCOUNT_STAGING
          profile_name: default
          role: 'LBH_Circle_CI_Deployment_Role'
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .aws

  assume-role-production:
    executor: docker-python
    steps:
      - checkout
      - aws_assume_role/assume_role:
          account: $AWS_ACCOUNT_PRODUCTION
          profile_name: default
          role: 'LBH_Circle_CI_Deployment_Role'
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .aws

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Workflows ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
workflows:
  version: 2
  continuous-delivery:
    jobs:
      - install-dependencies
      - run-tests:
          requires:
            - install-dependencies
      - sonar-scan:
          context: SonarCloud
          requires:
            - run-tests
      - run-cypress-e2e:
          requires:
            - install-dependencies
          matrix:
            parameters:
              browser: [chrome, firefox]
              # mobile, tablet, chromebook/desktop
              height: [480, 768, 960]
              # mobile, tablet, chromebook, desktop
              width: [320, 1024, 1366, 1536]
            exclude:
              # exclude screen combinations that don't make sense
              - browser: chrome
                height: 480
                width: 1536
              - browser: chrome
                height: 480
                width: 1366
              - browser: chrome
                height: 480
                width: 1024
              - browser: firefox
                height: 480
                width: 1536
              - browser: firefox
                height: 480
                width: 1366
              - browser: firefox
                height: 480
                width: 1024
              - browser: chrome
                height: 768
                width: 1536
              - browser: chrome
                height: 768
                width: 1366
              - browser: chrome
                height: 768
                width: 320
              - browser: firefox
                height: 768
                width: 1536
              - browser: firefox
                height: 768
                width: 1366
              - browser: firefox
                height: 768
                width: 320
              - browser: chrome
                height: 960
                width: 1024
              - browser: chrome
                height: 960
                width: 320
              - browser: firefox
                height: 960
                width: 1024
              - browser: firefox
                height: 960
                width: 320
          filters:
            branches:
              only: TS-1666-HR-Update-Node-and-packages
      - assume-role-development:
          context: api-assume-role-housing-development-context
          requires:
            - run-cypress-e2e
          filters:
            branches:
              only: development
      - build-deploy-development:
          context: housing-register-fe-build-context
          requires:
            - assume-role-development
          filters:
            branches:
              only: development
      - assume-role-staging:
          context: api-assume-role-housing-staging-context
          requires:
            - run-tests
          filters:
            branches:
              only: main
      - build-deploy-staging:
          context: housing-register-fe-build-context
          requires:
            - assume-role-staging
          filters:
            branches:
              only: main
      - permit-deploy-production:
          type: approval
          requires:
            - build-deploy-staging
          filters:
            branches:
              only: main
      - assume-role-production:
          context: api-assume-role-housing-production-context
          requires:
            - permit-deploy-production
          filters:
            branches:
              only: main
      - build-deploy-production:
          context: housing-register-fe-build-context
          requires:
            - assume-role-production
          filters:
            branches:
              only: main
